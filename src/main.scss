@mixin respond($breakpoint) {
  @if ($breakpoint == phone) {
    // 0-600px
    @media only screen and (max-width: 37.5em) {
      @content;
    }
  }
  @if ($breakpoint == tab-port) {
    // 600px-900px
    @media only screen and (max-width: 56.25em) {
      @content;
    }
  }
  @if ($breakpoint == tab-land) {
    // 900px-1200px
    @media only screen and (max-width: 75em) {
      @content;
    }
  }
  @if ($breakpoint == big-desk) {
    // 1800px
    @media only screen and (min-width: 112.5em) {
      @content;
    }
  }
}

:root {
  --border-radius: 1rem;
  --white: rgb(228, 228, 228);
  --black: rgb(51, 51, 51);
}

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
  @include respond(tab-land) {
    font-size: 50%;
  }
  @include respond(big-desk) {
    font-size: 75%;
  }
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

.svg {
  pointer-events: none;
}

.sequencer {
  width: 100vw;
  margin-top: 25vh;
  display: flex;
  flex-direction: column;
  align-items: center;

  .track {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 70%;

    &:not(:first-child) {
      margin-top: 5rem;
    }

    .controls {
      display: flex;
      align-items: flex-end;

      & > *:not(:first-child) {
        margin-left: 2rem;
      }

      h2 {
        font-size: 3rem;
        width: 8rem;
        @include respond(tab-land) {
          font-size: 2.5rem;
        }
        @include respond(tab-port) {
        font-size: 3.5rem;
        width: 9rem;
      }

      .mute {
        padding: 1rem 1rem 0.8rem 1rem;
        border: 1px solid;
        cursor: pointer;
        background-color: var(--black);
        outline: none;
        border-radius: var(--border-radius);
        transition: all 0.3s;

        .svg {
          height: 2rem;
          width: 2.5rem;
          fill: var(--white);
        }
      }

      .active {
        border: 1px solid var(--black);
        background-color: var(--white);

        .svg {
          fill: var(--black);
        }
      }

      .select {
        padding: 1rem;
        font-size: 1.5rem;
        border-radius: var(--border-radius);
        outline: none;
        width: 15rem;
      }
    }

    .pads {
      margin-left: 5rem;
      display: flex;

      .pad {
        height: 8rem;
        width: 8rem;
        border-radius: var(--border-radius);
        cursor: pointer;
        &:not(:last-child){
          margin-right: 1rem;
        }

        @include respond(tab-land) {
          height: 7rem;
          width: 7rem;
        }

        @include respond(tab-port) {
          height: 7.7rem;
          width: 7.7rem;
        }
      }

      .kick-pad {
        background-color: rgb(161, 197, 226);
      }
      .kick-pad.active {
        background-color: rgb(58, 149, 214);
      }

      .snare-pad {
        background-color: rgb(200, 161, 226);
      }
      .snare-pad.active {
        background-color: rgb(145, 56, 212);
      }

      .hihat-pad {
        background-color: rgb(161, 226, 186);
      }
      .hihat-pad.active {
        background-color: rgb(52, 211, 110);
      }
    }
  }

  .play {
    margin-top: 5rem;
    padding: 1rem 2.5rem;
    font-size: 2rem;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    outline: none;
    background-color: var(--black);
    color: var(--white);
  }

  .tempo {
    margin-top: 5rem;

    .tempo-slider {
      margin-bottom: 1rem;
      padding: 0.5rem;
      appearance: none;
      outline: none;
      cursor: pointer;
      border-radius: var(--border-radius);
      background-color: var(--black);
      width: 40rem;
      display: block;

      &::-webkit-slider-thumb {
        appearance: none;
        border-radius: 5px;
        width: 25px;
        height: 25px;
        background: var(--white);
      }
    }

    .tempo-label {
      font-size: 2rem;
    }
  }
}

@keyframes playSound {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.2);
  }
}
